{"ast":null,"code":"var _jsxFileName = \"D:\\\\chess\\\\chess\\\\src\\\\components\\\\BoardComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardComponent = _ref => {\n  _s();\n  let {\n    board: Board,\n    setBoard\n  } = _ref;\n  const [selectedCell, setSelectedCell] = useState(null);\n  function click(cell) {\n    setSelectedCell(cell);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: Board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        cell: cell,\n        selected: cell.x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.x) && cell.y === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.y)\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(BoardComponent, \"7ZpXPQIyeTuNHRqwYg7ZM80LtbY=\");\n_c = BoardComponent;\nexport default BoardComponent;\nvar _c;\n$RefreshReg$(_c, \"BoardComponent\");","map":{"version":3,"names":["React","useState","CellComponent","BoardComponent","board","Board","setBoard","selectedCell","setSelectedCell","click","cell","cells","map","row","index","x","y","id"],"sources":["D:/chess/chess/src/components/BoardComponent.tsx"],"sourcesContent":["import React, {FC, useState} from \"react\";\r\nimport {Board} from \"../models/Board\";\r\nimport CellComponent from \"./CellComponent\";\r\nimport {Cell} from \"../models/Cell\";\r\ninterface BoardProps\r\n{\r\n    board: Board;\r\n    setBoard: (board: Board) => void;\r\n}\r\nconst BoardComponent: FC<BoardProps> = ({board: Board, setBoard}) => \r\n{\r\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null);\r\n    function click(cell: Cell)\r\n    {\r\n        setSelectedCell(cell);\r\n    }\r\n    return(\r\n        \r\n        <div className=\"board\">\r\n            {Board.cells.map((row:Cell[], index: number) =>\r\n                <React.Fragment key={index}>\r\n                    {row.map(cell =>\r\n                        <CellComponent\r\n                            cell={cell} \r\n                            key={cell.id}\r\n                            selected={cell.x === selectedCell?.x && cell.y === selectedCell?.y}\r\n                        />\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAO5C,MAAMC,cAA8B,GAAG,QACvC;EAAA;EAAA,IADwC;IAACC,KAAK,EAAEC,KAAK;IAAEC;EAAQ,CAAC;EAE5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnE,SAASQ,KAAK,CAACC,IAAU,EACzB;IACIF,eAAe,CAACE,IAAI,CAAC;EACzB;EACA,oBAEI;IAAK,SAAS,EAAC,OAAO;IAAA,UACjBL,KAAK,CAACM,KAAK,CAACC,GAAG,CAAC,CAACC,GAAU,EAAEC,KAAa,kBACvC,QAAC,KAAK,CAAC,QAAQ;MAAA,UACVD,GAAG,CAACD,GAAG,CAACF,IAAI,iBACT,QAAC,aAAa;QACV,IAAI,EAAEA,IAAK;QAEX,QAAQ,EAAEA,IAAI,CAACK,CAAC,MAAKR,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEQ,CAAC,KAAIL,IAAI,CAACM,CAAC,MAAKT,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES,CAAC;MAAC,GAD9DN,IAAI,CAACO,EAAE;QAAA;QAAA;QAAA;MAAA,QAEd;IACL,GAPgBH,KAAK;MAAA;MAAA;MAAA;IAAA,QAQT;EACpB;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAvBIX,cAA8B;AAAA,KAA9BA,cAA8B;AAyBpC,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}